{"ast":null,"code":"var _jsxFileName = \"C:\\\\IntelliJ_Works\\\\web_payment_ui\\\\src\\\\components\\\\PaymentStatusCheck.js\";\n// PaymentStatusCheck.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentStatusCheck = ({\n  paymentReference,\n  setPaymentStatus,\n  setError\n}) => {\n  const checkPaymentStatus = async () => {\n    try {\n      // Clear previous errors\n      setError(null);\n\n      // Validate form fields before checking payment status\n      if (!paymentReference) {\n        return;\n      }\n\n      // Make a GET request to the Merchant Application Backend to check payment status\n      const response = await fetch(`http://localhost:8081/check-payment-status/${paymentReference}`);\n      if (!response.ok) {\n        throw await response.json();\n      }\n      const data = await response.json();\n      setPaymentStatus(data);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter Payment Reference:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: paymentReference,\n      onChange: e => setPaymentReference(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkPaymentStatus,\n      children: \"Check Payment Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = PaymentStatusCheck;\nexport default PaymentStatusCheck;\nvar _c;\n$RefreshReg$(_c, \"PaymentStatusCheck\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentStatusCheck","paymentReference","setPaymentStatus","setError","checkPaymentStatus","response","fetch","ok","json","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","setPaymentReference","target","onClick","_c","$RefreshReg$"],"sources":["C:/IntelliJ_Works/web_payment_ui/src/components/PaymentStatusCheck.js"],"sourcesContent":["// PaymentStatusCheck.js\r\nimport React, { useState } from 'react';\r\n\r\nconst PaymentStatusCheck = ({ paymentReference, setPaymentStatus, setError }) => {\r\n    const checkPaymentStatus = async () => {\r\n        try {\r\n            // Clear previous errors\r\n            setError(null);\r\n\r\n            // Validate form fields before checking payment status\r\n            if (!paymentReference) {\r\n                return;\r\n            }\r\n\r\n            // Make a GET request to the Merchant Application Backend to check payment status\r\n            const response = await fetch(`http://localhost:8081/check-payment-status/${paymentReference}`);\r\n\r\n            if (!response.ok) {\r\n                throw await response.json();\r\n            }\r\n\r\n            const data = await response.json();\r\n            setPaymentStatus(data);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Check Payment Status section */}\r\n            <label>Enter Payment Reference:</label>\r\n            <input type=\"text\" value={paymentReference} onChange={(e) => setPaymentReference(e.target.value)} />\r\n            <button onClick={checkPaymentStatus}>Check Payment Status</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentStatusCheck;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,gBAAgB;EAAEC;AAAS,CAAC,KAAK;EAC7E,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA;MACAD,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,IAAI,CAACF,gBAAgB,EAAE;QACnB;MACJ;;MAEA;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CL,gBAAiB,EAAC,CAAC;MAE9F,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC/B;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,gBAAgB,CAACO,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZP,QAAQ,CAACO,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAY,QAAA,gBAEIZ,OAAA;MAAAY,QAAA,EAAO;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvChB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEhB,gBAAiB;MAACiB,QAAQ,EAAGC,CAAC,IAAKC,mBAAmB,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpGhB,OAAA;MAAQuB,OAAO,EAAElB,kBAAmB;MAAAO,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd,CAAC;AAACQ,EAAA,GAjCIvB,kBAAkB;AAmCxB,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}